{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./View.js","webpack:///./index.js","webpack:///./jsFiles/Board.js","webpack:///./jsFiles/ComputerPlayer.js","webpack:///./jsFiles/Game.js","webpack:///./jsFiles/HumanPlayer.js","webpack:///./jsFiles/words.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAoC;AACpC;;AAEA;AACA;AACA;AACA;;;AAGA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;;AAGA;;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;AACA;;AAEA;AACA,8CAA8C,wBAAwB;;AAEtE;AACA;AACA;;;;AAIA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,2BAA2B,wDAAI;AAC/B;;AAEA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iEAAiE,eAAe;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,2BAA2B;AAC7F,SAAS;AACT;AACA;AACA,gEAAgE,2BAA2B;AAC3F,SAAS;AACT,2EAA2E,2BAA2B;AACtG;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;AAIA;;;;;;;AAOe,mEAAI;;;;;;;;;;;;;;;;;;;AChOnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACc;AACM;AAClB;AACV;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,wDAAI;AAC1B;AACA,QAAQ,gDAAI;;;AAGZ,CAAC;;;AAGD,CAAC,C;;;;;;;;;;;ACjCD;AACA;AACA;AACA;;AAEA,KAAK,YAAY,GAAG,mBAAO,EAAE,sCAAY;;AAEzC;;AAEA,OAAO,eAAe,GAAG,mBAAO,CAAC,wDAAqB;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,YAAY,GAAG,mBAAO,CAAC,sCAAY;;;AAG1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACxBA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mBAAO,CAAC,wDAAqB;AACpD,oBAAoB,mBAAO,CAAC,kDAAkB;AAC9C,cAAc,mBAAO,CAAC,sCAAY;;;AAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChD;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,oCAAoC,2BAA2B;AAC/D,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,KAAK;AAC7B;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACe,mEAAI,EAAC;;AAEpB;AACA;;;AAGA;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,mBAAO,CAAC,sCAAY;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gB;;;;;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,a","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","import Game from \"./jsFiles/Game.js\"\nclass View{\n\n    constructor(game,el){\n        this.game = game;\n        this.el = el\n        this.play()\n        \n\n    }\n\n\n\n    play(){\n\n        if(this.game.isGameOver()){\n            this.displayBoard();\n            this.displayGuessed();\n            this.displayImgs(this.game.guessesRemaining);\n            this.bindEvents();\n            console.log(this.game.computer.word)\n        } else if(this.game.board.isComplete(this.game.computer.word)){\n            let results = \"win\"\n            this.endGame(results)   \n        } else {\n            \n            let results = \"lose\"\n            this.endGame(results) \n       \n        }\n    }\n\n    // doesnt work\n\n    // readyAsh(){\n    //     this.el.innerHTML = \"\";\n\n    //     let Img = document.createElement(\"img\");\n    //     let src = `./images/get_ready.gif`;\n        \n    //     Img.src = src;\n        \n        \n    //     this.el.appendChild(Img)\n\n    //     debugger\n\n    //     setTimeout(this.play(), 9000);\n\n    //     // debugger\n\n\n    // }\n\n\n\n    \n    // if they win/lose the game\n    endGame(result){\n        let h4 = document.querySelector(\"#guessesRemaining\");\n        h4.innerHTML =\"\"\n\n        let guess = document.querySelector(\"#guessDiv\")\n        guess.innerHTML = \"\"\n        this.el.innerHTML = \"\";\n\n        let winImg = document.createElement(\"img\");\n        let winSrc = `./images/${result}_Pokemon.gif`;\n        winImg.src = winSrc;\n        winImg.class = \"Img\"\n\n        let img = document.createElement(\"img\");\n        let newSrc = `./images/${result}-speech-bubble.gif`;\n        img.src = newSrc;\n        img.id=\"dial\"\n\n        let h2 = document.createElement(\"h2\");\n        h2.innerText = `The secret word was ${this.game.computer.word}`;\n\n        this.el.appendChild(winImg)\n        this.el.appendChild(img)\n        this.el.appendChild(h2)\n        \n\n\n        this.newGame();\n\n    }\n\n\n    // create new game\n    newGame(){\n        let guess = document.querySelector(\"#guessDiv\")\n        let playAgainBtn = document.createElement(\"button\");\n        playAgainBtn.innerText = \"Play Again?\"\n        playAgainBtn.id = \"playagain\";\n\n        guess.appendChild(playAgainBtn);\n\n        playAgainBtn.addEventListener(\"click\", () => {\n            playAgainBtn.parentNode.removeChild(playAgainBtn);\n\n            let game = new Game(name);\n            let el = document.querySelector(\"#gameDiv\");\n\n            new View(game,el);\n        })\n    }\n\n    \n    displayImgs(numGuesses){\n        let imgDiv = document.createElement(\"div\");\n        let img = document.createElement(\"img\");\n        let newSrc = `./images/ash_${numGuesses}.jpg`;\n        img.id =\"ash\"\n        img.src = newSrc;\n   \n        imgDiv.appendChild(img);\n        this.el.prepend(imgDiv);\n    }\n\n    //displays: hangman image, guesses remaining, guessed letters\n\n    displayBoard(){\n        this.el.innerHTML = \"\";\n        let boardDiv = document.createElement(\"div\");\n        let currentBoard = this.game.board.displayBoard();\n        let h1 = document.createElement(\"h1\")\n        h1.innerText = currentBoard;\n\n        let h4 = document.createElement(\"h4\");\n        h4.id=\"guessesRemaining\"\n        document.body.appendChild(h4)\n\n        let img = document.createElement(\"img\");\n        img.id=\"enterGuess\";\n        img.src = \"./images/game-speech-bubble.gif\"\n\n        let guessed= document.createElement(\"p\");\n        guessed.id=\"guessLetters\";\n\n        boardDiv.appendChild(h1);\n        boardDiv.appendChild(guessed);\n        boardDiv.appendChild(img);\n\n        this.el.appendChild(boardDiv);\n        let guesses = this.game.guessLetters\n        this.Letters(guesses)\n    }\n\n    //waiting for click of a letter ul\n    bindEvents(){\n        let ul = document.querySelector(\"#letters\")\n        ul.addEventListener(\"click\", (e) => {\n            \n            let input = e.toElement.innerText\n            this.result(input)\n        })\n    }\n\n    // displays the users guesses \n    displayGuessed(){\n        let guessLetters = document.querySelector(\"#guessLetters\");\n        if(this.game.guessLetters.length === 0){\n            guessLetters.innerText = \"No guesses have been made\";\n        } else {\n            let guessedLetters = this.game.guessLetters.join(\", \");\n            guessLetters.innerText = `Letters guessed already: ${guessedLetters}`;\n        }\n    }\n\n    //takes in the input from bindevents \n    result(input){\n        let h4 = document.querySelector(\"#guessesRemaining\")\n        if(this.game.isValidGuess(input.toLowerCase()) && !this.game.computer.word.includes(input.toLowerCase())){\n            this.game.guessLetters.push(input.toLowerCase());\n            this.game.guessesRemaining -= 1;\n            h4.innerText = `Incorrect guess! Guesses remaining: ${this.game.guessesRemaining}`;\n        } else if(this.game.isValidGuess(input.toLowerCase())){\n            this.game.guessLetters.push(input.toLowerCase());\n            this.game.board.addChar(this.game.computer.word, input.toLowerCase());\n            h4.innerText = `Correct guess! Guesses remaining: ${this.game.guessesRemaining}`;\n        } else {\n            h4.innerText = `Please enter valid Guess! Guesses Remaining: ${this.game.guessesRemaining}`;\n        }\n        this.play();\n    }\n\n    // creates letter list and turns red if letter is choosen\n\n    Letters(guesses){\n        let guessDiv = document.querySelector(\"#guessDiv\")\n        guessDiv.innerHTML = \"\"\n        let alpha = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\n        let ul = document.createElement(\"ul\")\n        ul.id =\"letters\"\n        for(let i = 0; i< alpha.length; i++){\n            let li = document.createElement(\"li\")\n            li.innerText=alpha[i]\n         \n            \n            if(guesses.includes(alpha[i])){\n\n                li.style.color = \"red\"\n       \n            }\n            \n            ul.appendChild(li)\n        }\n\n        guessDiv.appendChild(ul)\n\n    }\n    \n\n    \n    }\n    \n\n\n    \n\n\nexport default View\n\n\n\n\n\n\n","import Game from \"./jsFiles/Game.js\"\nimport HumanPlayer from \"./jsFiles/HumanPlayer.js\"\nimport ComputerPlayer from \"./jsFiles/ComputerPlayer.js\"\nimport Board from \"./jsFiles/Board.js\"\nimport View from \"./View.js\"\n\ndocument.addEventListener(\"DOMContentLoaded\",()=>{\nlet el = document.querySelector(\"#gameDiv\") \nlet startImage = document.createElement(\"img\")\nstartImage.id = \"startImage\"\nstartImage.src =\"./images/Professor__Oak.png\"\nel.appendChild(startImage)\n\nlet startdial = document.createElement(\"img\")\nstartdial.id = \"startdial\"\nstartdial.src =\"./images/start-speech-bubble.gif\"\nel.appendChild(startdial)\n\nlet button = document.createElement(\"button\")\nbutton.id=\"startGame\"\nbutton.innerText = \"START\"\nel.appendChild(button)\n\nbutton.addEventListener(\"click\",()=>{\n\n    let newGame = new Game(name)\n    let el = document.querySelector(\"#gameDiv\") \n    new View(newGame,el)\n\n\n})\n\n\n})","// 1. Board\n//   * This would construct a board to the length. \n//   * It should check if the board is complete. \n//   * It should be able to add characters at differnect indicies. \n\nlet {allTheWords} = require ('./words.js')\n\n//class of board\n\nconst {ComputerPlayer} = require('./ComputerPlayer.js')\n\nclass Board{\n// the constructor will take in a length of a word to create the board\n    constructor(length){\n   this.board = new Array(length).fill(\"_\")\n   }\n\n   // addChar take in an array and char, places the charater on the board at the index numbers in the arrays\n//    addChar(arr, char){\n//     for (let i = 0; i < arr.length; i++){\n//         this.board[i] = char\n//     }\n//    }\n\n   //addChar takes in user's guessLetter adds that letter on the board at the same index it appears on the word\n   addChar(word, letter) {\n    for(let i = 0; i < word.length; i++){\n        if(word[i] === letter){\n            this.board[i] = letter;\n        }\n    }\n}\n\n    //checks to see if the board is complete by comparing it to the word - boolean return\n    isComplete(word){\n        if(this.board.join(\"\") === word){\n            return true;\n        } else {\n            return false;\n        }\n    }\n    //displays the board\n    displayBoard(){\n       let currentBoard = this.board.join(\" \")\n        return currentBoard\n    }\n}\n\n\n\nmodule.exports = Board\n\n","// 3. ComputerPlayer \n//   * Should have a dictionary.\n//   * Should have secretWord and return it's length. \n//   * Should have a reveal. \n//   * Should give the positions of guessed characters. \n//   * Possibly have a getMove. \nconst {allTheWords} = require('./words.js');\n\n\nclass ComputerPlayer {\n   constructor(computerPlayer){\n    this.computerPlayer = computerPlayer\n    this.word = allTheWords[(Math.floor(Math.random() * allTheWords.length))];\n   }\n\nlengthSecretWord(){\n    return this.word.length\n}\nrevealWord(){\n   return this.word\n  \n}\n}\n\nmodule.exports = ComputerPlayer\n","// 4. Game \n//   * Should have guesser and referee. \n//   * Should have guesses remaining. \n//   * Should have a play function. \n//   * Should check for validity of guess. \n//   * Should have an isGameOver. \n\n// const readline = require('readline-sync')\nconst ComputerPlayer = require('./ComputerPlayer.js')\nconst HumanPlayer = require('./HumanPlayer.js')\nconst Board = require('./Board.js')\n\n\nclass Game{\n    constructor(name){\n        this.computer = new ComputerPlayer()\n        this.human = new HumanPlayer(name)\n        this.board = new Board(this.computer.lengthSecretWord())\n        this.guessesRemaining = 6\n        this.guessLetters = []\n   }\n\n   // takes in the guesses remaing and put the lil dude at at index \n   displayAlien(num){\n   \n    let alien = [[\"🛸\"],\n            [],\n            [],\n            [],\n            [],\n            []]\n    \n    alien[num] = \"🕴\"\n\n    for (let i = 0; i < alien.length; i++){\n        console.log((alien[i].toString()));\n    \n    }\n}\n\n    //method that would run the game\n   isGameOver(){\n    if (this.guessesRemaining <= 0 || this.board.isComplete(this.computer.word)){\n        return true;\n    } else {\n        return false;\n    }\n}\n\n    // Main Play function \nplayGame(){\n    \n    let secretWord = this.computer.word\n    let message = \"Guess the word or your coming with me!\"\n\n\nwhile(!this.isGameOver()){\n\n    console.clear()\n    this.displayAlien(this.guessRemaining)\n    this.board.displayBoard();\n    console.log(this.guessLetters.join())  \n    console.log(message)\n    console.log(`You have ${this.guessRemaining} remaining`)\n    // console.log(secretWord) \n\n\nlet guess = this.human.getMove()\n\nif (this.isValid(guess) && (!this.guessLetters.includes(guess)) ){\n    \n    if(secretWord.includes(guess)){\n        console.log(secretWord)\n        this.board.addChar(this.computer.word, guess);\n        this.guessLetters.push(guess)\n        message = \"You Guessed Right\"\n    }else{\n    this.guessLetters.push(guess)\n    this.guessRemaining -= 1\n    message = \"You Guessed Wrong \"\n    }\n\n}else{\n    message = \"Invalid Move\"\n}\nif(this.guessRemaining === 0){\n    console.clear()\n    this.board.displayBoard();\n    console.log(`HA! the word was ${this.computer.revealWord()}`)\n    console.log(`No more guesses ${name} 👽 time to start testing!`)\n     break;\n }\nif(this.board.isComplete(this.computer.word)){\n    console.clear()\n\n    this.board.displayBoard();\n    // let secretWord = this.computer.word\n    console.log(`UGH! ${name} YOUR FREE TO GO! RUN! GO ON!`)\n     break;\n\n    }\n\n\n}\n\n}\n    \n   //checks to see if the guess letter is in the alphabet, lowercase\nisValid(guess){\n    let valid = false\n    let alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    if(alphabet.includes(guess.toLowerCase())){\n        valid = true\n    } else {\n        valid = false\n    }\n    return valid\n}\n\n//checks if game is over\nisGameOver(){\n    return this.guessesRemaining > 0 && !this.board.isComplete(this.computer.word)\n}\n\n\nisValidGuess (guess){\n    let alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    let valid = false;\n    if(alphabet.includes(guess) && !this.guessLetters.includes(guess)){\n        valid = true;\n    }\n    return valid;\n}\n\n\n\n}\nexport default Game;\n\n// let name = readline.question(\"👾 Hi there Human, What is your name?\")\n// let game = new Game(name)\n\n\n// game.playGame()\n\n","// 2. HumanPlayer \n//   * Will need to getMove from player. \n//   * Display the board. \n//   * Possibly a select secret word that returns the length. \n//   * Possibly a givePostioins that returns an array of indicies. \n//   * Possibly a reveal word. \n\n// const readline = require(\"readline-sync\");\n\nconst Board = require(\"./Board.js\")\n\n// const readline = require('readline-sync')\n\nclass HumanPlayer {\n   constructor(player){\n       this.player = player\n   }\n   // ask the player for a move \n   getMove(){\n       return readline.question(\"Please choose a letter\")\n   }\n\n   displayBoard(board){\n       return board.join(\" \")\n   }\n\n}\nmodule.exports = HumanPlayer\n\n// let jon = new HumanPlayer(\"jon\")\n// jon.getName()","//All Words\n\nconst  allTheWords = [\"able\", \"about\", \"account\", \"acid\", \"across\", \"addition\", \"adjustment\",\n\"advertisement\", \"after\", \"again\", \"against\", \"agreement\", \"almost\", \"among\", \"amount\", \"amusement\", \n\"angle\", \"angry\", \"animal\", \"answer\", \"apparatus\", \"apple\", \"approval\", \"arch\", \"argument\", \"army\", \n\"attack\", \"attempt\", \"attention\", \"attraction\", \"authority\", \"automatic\", \"awake\", \"baby\", \"back\", \"balance\",\n\"ball\", \"band\", \"base\", \"basin\", \"basket\", \"bath\", \"beautiful\", \"because\", \"before\", \"behaviour\", \n\"belief\", \"bell\", \"bent\", \"berry\", \"between\", \"bird\", \"birth\", \"bite\", \"bitter\", \"black\", \n\"blade\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \"body\", \"boiling\", \"bone\", \"book\", \"boot\",\n\"bottle\", \"brain\", \"brake\", \"branch\", \"brass\", \"bread\", \"breath\", \"brick\", \"bridge\", \"bright\", \n\"broken\", \"brother\", \"brown\", \"brush\", \"bucket\", \"building\", \"bulb\", \"burn\", \"burst\", \"business\", \n\"butter\", \"button\", \"cake\", \"camera\", \"canvas\", \"card\", \"care\", \"carriage\", \"cart\", \"cause\", \"certain\", \n\"chain\", \"chalk\", \"chance\", \"change\", \"cheap\", \"cheese\", \"chemical\", \"chest\", \"chief\", \"chin\", \"church\",\n\"circle\", \"clean\", \"clear\", \"clock\", \"cloth\", \"cloud\", \"coal\", \"coat\", \"cold\", \"collar\", \"colour\", \"comb\",\n\"come\", \"comfort\", \"committee\", \"common\", \"company\", \"comparison\", \"competition\", \"complete\", \"complex\",\n\"condition\", \"connection\", \"conscious\", \"control\", \"cook\", \"copper\", \"copy\", \"cord\", \"cork\", \"cotton\", \n\"cough\", \"country\", \"cover\", \"crack\", \"credit\", \"crime\", \"cruel\", \"crush\", \"current\", \"curtain\", \"curve\",\n\"cushion\", \"damage\", \"danger\", \"dark\", \"daughter\", \"dead\", \"dear\", \"death\", \"debt\", \"decision\", \"deep\", \n\"degree\", \"delicate\", \"dependent\", \"design\", \"desire\", \"destruction\", \"detail\", \"development\", \"different\", \n\"digestion\", \"direction\", \"dirty\", \"discovery\", \"discussion\", \"disease\", \"disgust\", \"distance\", \n\"distribution\", \"division\", \"door\", \"doubt\", \"down\", \"drain\", \"drawer\", \"dress\", \"drink\", \"driving\", \n\"drop\", \"dust\", \"early\", \"earth\", \"east\", \"edge\", \"education\", \"effect\", \"elastic\", \"electric\", \"engine\", \n\"enough\", \"equal\", \"error\", \"even\", \"event\", \"ever\", \"every\", \"example\", \"exchange\", \"existence\", \"expansion\", \n\"experience\", \"expert\", \"face\", \"fact\", \"fall\", \"false\", \"family\", \"farm\", \"father\", \"fear\", \"feather\", \n\"feeble\", \"feeling\", \"female\", \"fertile\", \"fiction\", \"field\", \"fight\", \"finger\", \"fire\", \"first\", \n\"fish\", \"fixed\", \"flag\", \"flame\", \"flat\", \"flight\", \"floor\", \"flower\", \"fold\", \"food\", \"foolish\", \n\"foot\", \"force\", \"fork\", \"form\", \"forward\", \"fowl\", \"frame\", \"free\", \"frequent\", \"friend\", \"from\", \n\"front\", \"fruit\", \"full\", \"future\", \"garden\", \"general\", \"girl\", \"give\", \"glass\", \"glove\", \"goat\", \"gold\",\n\"good\", \"government\", \"grain\", \"grass\", \"great\", \"green\", \"grey\", \"grip\", \"group\", \"growth\", \"guide\", \"hair\", \n\"hammer\", \"hand\", \"hanging\", \"happy\", \"harbour\", \"hard\", \"harmony\", \"hate\", \"have\", \"head\", \"healthy\", \"hear\", \n\"hearing\", \"heart\", \"heat\", \"help\", \"high\", \"history\", \"hole\", \"hollow\", \"hook\", \"hope\", \"horn\", \"horse\", \n\"hospital\", \"hour\", \"house\", \"humour\", \"idea\", \"important\", \"impulse\", \"increase\", \"industry\", \"insect\", \n\"instrument\", \"insurance\", \"interest\", \"invention\", \"iron\", \"island\", \"jelly\", \"jewel\", \"join\", \"journey\", \n\"judge\", \"jump\", \"keep\", \"kettle\", \"kick\", \"kind\", \"kiss\", \"knee\", \"knife\", \"knot\", \"knowledge\", \"land\",\n\"language\", \"last\", \"late\", \"laugh\", \"lead\", \"leaf\", \"learning\", \"leather\", \"left\", \"letter\", \"level\", \n\"library\", \"lift\", \"light\", \"like\", \"limit\", \"line\", \"linen\", \"liquid\", \"list\", \"little\", \"living\", \"lock\", \n\"long\", \"look\", \"loose\", \"loss\", \"loud\", \"love\", \"machine\", \"make\", \"male\", \"manager\", \"mark\", \"market\", \n\"married\", \"mass\", \"match\", \"material\", \"meal\", \"measure\", \"meat\", \"medical\", \"meeting\", \"memory\", \"metal\", \n\"middle\", \"military\", \"milk\", \"mind\", \"mine\", \"minute\", \"mist\", \"mixed\", \"money\", \"monkey\", \"month\", \"moon\",\n\"morning\", \"mother\", \"motion\", \"mountain\", \"mouth\", \"move\", \"much\", \"muscle\", \"music\", \"nail\", \"name\",\n\"narrow\", \"nation\", \"natural\", \"near\", \"necessary\", \"neck\", \"need\", \"needle\", \"nerve\", \"news\", \"night\",\n\"noise\", \"normal\", \"north\", \"nose\", \"note\", \"number\", \"observation\", \"offer\", \"office\", \"only\", \"open\", \n\"operation\", \"opinion\", \"opposite\", \"orange\", \"order\", \"organization\", \"ornament\", \"other\", \"oven\", \"over\", \n\"owner\", \"page\", \"pain\", \"paint\", \"paper\", \"parallel\", \"parcel\", \"part\", \"past\", \"paste\", \"payment\", \"peace\", \n\"pencil\", \"person\", \"physical\", \"picture\", \"pipe\", \"place\", \"plane\", \"plant\", \"plate\", \"play\", \"please\", \"pleasure\", \n\"plough\", \"pocket\", \"point\", \"poison\", \"polish\", \"political\", \"poor\", \"porter\", \"position\", \"possible\", \"potato\", \n\"powder\", \"power\", \"present\", \"price\", \"print\", \"prison\", \"private\", \"probable\", \"process\", \"produce\", \"profit\", \n\"property\", \"prose\", \"protest\", \"public\", \"pull\", \"pump\", \"punishment\", \"purpose\", \"push\", \"quality\", \"question\", \n\"quick\", \"quiet\", \"quite\", \"rail\", \"rain\", \"range\", \"rate\", \"reaction\", \"reading\", \"ready\", \"reason\", \"receipt\", \n\"record\", \"regret\", \"regular\", \"relation\", \"religion\", \"representative\", \"request\", \"respect\", \"responsible\", \n\"rest\", \"reward\", \"rhythm\", \"rice\", \"right\", \"ring\", \"river\", \"road\", \"roll\", \"roof\", \"room\", \"root\", \"rough\", \n\"round\", \"rule\", \"safe\", \"sail\", \"salt\", \"same\", \"sand\", \"scale\", \"school\", \"science\", \"scissors\", \"screw\", \n\"seat\", \"second\", \"secret\", \"secretary\", \"seed\", \"seem\", \"selection\", \"self\", \"send\", \"sense\", \"separate\", \n\"serious\", \"servant\", \"shade\", \"shake\", \"shame\", \"sharp\", \"sheep\", \"shelf\", \"ship\", \"shirt\", \"shock\", \"shoe\", \n\"short\", \"shut\", \"side\", \"sign\", \"silk\", \"silver\", \"simple\", \"sister\", \"size\", \"skin\", \"skirt\", \"sleep\", \n\"slip\", \"slope\", \"slow\", \"small\", \"smash\", \"smell\", \"smile\", \"smoke\", \"smooth\", \"snake\", \"sneeze\", \"snow\", \n\"soap\", \"society\", \"sock\", \"soft\", \"solid\", \"some\", \"song\", \"sort\", \"sound\", \"soup\", \"south\", \"space\", \n\"spade\", \"special\", \"sponge\", \"spoon\", \"spring\", \"square\", \"stage\", \"stamp\", \"star\", \"start\", \"statement\", \n\"station\", \"steam\", \"steel\", \"stem\", \"step\", \"stick\", \"sticky\", \"stiff\", \"still\", \"stitch\", \"stocking\", \n\"stomach\", \"stone\", \"stop\", \"store\", \"story\", \"straight\", \"strange\", \"street\", \"stretch\", \"strong\", \n\"structure\", \"substance\", \"such\", \"sudden\", \"sugar\", \"suggestion\", \"summer\", \"support\", \"surprise\", \n\"sweet\", \"swim\", \"system\", \"table\", \"tail\", \"take\", \"talk\", \"tall\", \"taste\", \"teaching\", \"tendency\", \n\"test\", \"than\", \"that\", \"then\", \"theory\", \"there\", \"thick\", \"thin\", \"thing\", \"this\", \"thought\", \"thread\", \n\"throat\", \"through\", \"through\", \"thumb\", \"thunder\", \"ticket\", \"tight\", \"till\", \"time\", \"tired\", \"together\", \n\"tomorrow\", \"tongue\", \"tooth\", \"touch\", \"town\", \"trade\", \"train\", \"transport\", \"tray\", \"tree\", \"trick\", \n\"trouble\", \"trousers\", \"true\", \"turn\", \"twist\", \"umbrella\", \"under\", \"unit\", \"value\", \"verse\", \"very\", \n\"vessel\", \"view\", \"violent\", \"voice\", \"waiting\", \"walk\", \"wall\", \"warm\", \"wash\", \"waste\", \"watch\", \"water\", \n\"wave\", \"weather\", \"week\", \"weight\", \"well\", \"west\", \"wheel\", \"when\", \"where\", \"while\", \"whip\", \"whistle\", \n\"white\", \"wide\", \"will\", \"wind\", \"window\", \"wine\", \"wing\", \"winter\", \"wire\", \"wise\", \"with\", \"woman\", \"wood\", \n\"wool\", \"word\", \"work\", \"worm\", \"wound\", \"writing\", \"wrong\", \"year\", \"yellow\", \"yesterday\", \"young\"]\n\nmodule.exports = {allTheWords}; "],"sourceRoot":""}